{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","currentSum","setCurrentSum","clear","setClear","Home","About","Dashboard","useEffect","document","querySelector","value","className","to","exact","path","type","id","readOnly","placeholder","onClick","e","preventDefault","currentNum","sum","parseInt","reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2OA4GeA,MApGf,WAAgB,IAAD,EACuBC,mBAAS,GADhC,mBACNC,EADM,KACMC,EADN,OAEaF,oBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,KAgCb,SAASC,IACP,OACE,8BACE,wCAKN,SAASC,IACP,OACE,8BACE,yCAKN,SAASC,IACP,OACE,8BACE,6CAIN,OAnDAC,qBAAU,WACRC,SAASC,cAAc,WAAWC,MAAQ,KACzC,IAEHH,qBAAU,WACJL,IACFM,SAASC,cAAc,WAAWC,MAAQ,OA+C5C,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,UACE,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAGF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,aAAT,4BAGJ,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACV,EAAD,MAEF,cAAC,IAAD,CAAOU,KAAK,SAAZ,SACE,cAACT,EAAD,MAEF,cAAC,IAAD,CAAOS,KAAK,aAAZ,SACE,cAACR,EAAD,cAKR,qBAAKK,UAAU,YAAf,SACU,uEAEF,iCACE,uBAAOI,KAAK,OAAOC,GAAG,SAASN,MAAOV,EAAYiB,UAAQ,IAC1D,uBAAOF,KAAK,OAAOC,GAAG,MAAME,YAAY,mBACxC,wBAAQC,QA/EV,SAACC,GACXA,EAAEC,iBACEnB,GAAOC,GAAS,GACpB,IAAImB,EAAad,SAASC,cAAc,QAAQC,MAChD,GAAmB,KAAfY,EAAJ,CAEA,IAAIC,EAAMvB,EAAawB,SAASF,GAChCrB,EAAcsB,GACdf,SAASC,cAAc,QAAQC,MAAQ,KAuE3B,iBACA,wBAAQS,QApER,SAACC,GACbA,EAAEC,iBACFb,SAASC,cAAc,QAAQgB,QAC/BtB,GAAS,GACTF,EAAc,IAgEF,0BCzFDyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BZ,M","file":"static/js/main.6abe2884.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [currentSum, setCurrentSum] = useState(0);\r\n  const [clear, setClear] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.querySelector('#result').value = \"\";\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (clear)\r\n      document.querySelector('#result').value = \"\";\r\n  })\r\n\r\n  const Add = (e) => {\r\n    e.preventDefault();\r\n    if (clear) setClear(false);\r\n    let currentNum = document.querySelector('#num').value\r\n    if (currentNum === '')\r\n      return;\r\n    let sum = currentSum + parseInt(currentNum);\r\n    setCurrentSum(sum);\r\n    document.querySelector('#num').value = \"\";\r\n\r\n  }\r\n\r\n  const Clear = (e) => {\r\n    e.preventDefault();\r\n    document.querySelector('form').reset();\r\n    setClear(true);\r\n    setCurrentSum(0);\r\n  }\r\n\r\n  function Home() {\r\n    return (\r\n      <div>\r\n        <h2>Home</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function About() {\r\n    return (\r\n      <div>\r\n        <h2>About</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function Dashboard() {\r\n    return (\r\n      <div>\r\n        <h2>Dashboard</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n             \r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/dashboard\">Dashboard</Link>\r\n            </li>\r\n          </ul>\r\n          <hr />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n              <Dashboard />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      <div className=\"app-title\">\r\n                <h1> Basic Form Calculator for Addition</h1>\r\n              </div>\r\n              <form>\r\n                <input type=\"text\" id=\"result\" value={currentSum} readOnly />\r\n                <input type=\"text\" id=\"num\" placeholder=\"enter a number\" />\r\n                <button onClick={Add}>Add</button>\r\n                <button onClick={Clear}>Clear</button>\r\n              </form>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}