{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","currentSum","setCurrentSum","clear","setClear","useEffect","document","querySelector","value","className","type","id","readOnly","placeholder","onClick","e","preventDefault","currentNum","sum","parseInt","console","log","reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kOAkDeA,MA/Cf,WAAgB,IAAD,EACuBC,mBAAS,GADhC,mBACNC,EADM,KACMC,EADN,OAEaF,oBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,KAgCb,OA5BAC,qBAAU,WACRC,SAASC,cAAc,WAAWC,MAAQ,KACzC,IAEHH,qBAAU,WACJF,IACFG,SAASC,cAAc,WAAWC,MAAQ,OAuB5C,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,uEAEF,iCACE,uBAAOC,KAAK,OAAOC,GAAG,SAASH,MAAOP,EAAYW,UAAQ,IAC1D,uBAAOF,KAAK,OAAOC,GAAG,MAAME,YAAY,mBACxC,wBAAQC,QA3BF,SAACC,GACXA,EAAEC,iBACEb,GAAOC,GAAS,GACpB,IAAIa,EAAaX,SAASC,cAAc,QAAQC,MAChD,GAAkB,IAAdS,EAAJ,CAEA,IAAIC,EAAMjB,EAAakB,SAASF,GAChCf,EAAcgB,GACdZ,SAASC,cAAc,QAAQC,MAAQ,KAmBnC,iBACA,wBAAQM,QAhBA,SAACC,GACbA,EAAEC,iBACFI,QAAQC,IAAI,OAAQpB,GACpBK,SAASC,cAAc,QAAQe,QAC/BlB,GAAS,GACTF,EAAc,IAWV,0BChCOqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,SAM1BZ,K","file":"static/js/main.7c452b08.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [currentSum, setCurrentSum] = useState(0);\n  const [clear, setClear] = useState(false);\n\n  useEffect(() => {\n    document.querySelector('#result').value = \"\";\n  }, [])\n\n  useEffect(() => {\n    if (clear)\n      document.querySelector('#result').value = \"\";\n  })\n\n  const Add = (e) => {\n    e.preventDefault();\n    if (clear) setClear(false);\n    let currentNum = document.querySelector('#num').value\n    if (currentNum == '')\n      return;\n    let sum = currentSum + parseInt(currentNum);\n    setCurrentSum(sum);\n    document.querySelector('#num').value = \"\";\n\n  }\n\n  const Clear = (e) => {\n    e.preventDefault();\n    console.log('sum:', currentSum);\n    document.querySelector('form').reset();\n    setClear(true);\n    setCurrentSum(0);\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"app-title\">\n        <h1> Basic Form Calculator for Addition</h1>\n      </div>\n      <form>\n        <input type=\"text\" id=\"result\" value={currentSum} readOnly />\n        <input type=\"text\" id=\"num\" placeholder=\"enter a number\" />\n        <button onClick={Add}>Add</button>\n        <button onClick={Clear}>Clear</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}